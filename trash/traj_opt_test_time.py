import numpy as np
import matplotlib.pyplot as plt

q0 = -200
qw = -20
qf = 60
a = 20
c = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  1, 1]]).T

A_ub = np.array([[1, -2, 1, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],
                 [0, 1, -2, 1, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],
                 [0, 0, 1, -2, 1, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],
                 [0, 0, 0, 1, -2, 1, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],
                 [0, 0, 0, 0,  1, -2, 1,0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],
                 [0, 0, 0, 0,  0, 1, -2,1, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],
                 [0, 0, 0, 0,  0, 0, 1, -2,1, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],
                 [0, 0, 0, 0,  0, 0, 0, 1, -2,1,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],

                 [0, 0, 0, 0, 0, 0, 0, 0, 1, -2,   1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  1,  -2, 1, 0, 0, 0, 0, 0, 0, 0, 0,  0, -a],

                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   1,-2, 1, 0, 0, 0, 0, 0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 1,-2, 1, 0, 0, 0, 0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 1,-2, 1, 0, 0, 0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, 1,-2, 1, 0, 0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, 0, 1,-2, 1, 0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, 0, 0, 1, -2, 1, 0, 0, 0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, 0, 0, 0, 1, -2, 1, 0, 0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, 0, 0, 0, 0, 1,-2, 1,  0, -a],


                 [-1, 2, -1,0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -a, 0],
                 [0, -1, 2, -1,0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -a, 0],
                 [0, 0, -1, 2,-1, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -a, 0],
                 [0, 0, 0, -1, 2, -1, 0,0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -a, 0],
                 [0, 0, 0, 0, -1, 2, -1,0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -a, 0],
                 [0, 0, 0, 0,  0, -1, 2,-1,0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -a, 0],
                 [0, 0, 0, 0,  0, 0, -1, 2,-1,0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -a, 0],
                 [0, 0, 0, 0,  0, 0, 0, -1, 2,-1,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -a, 0],

                 [0, 0, 0, 0, 0, 0, 0, 0, -1, 2,  -1, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -a, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, -1,   2,-1, 0, 0, 0, 0, 0, 0, 0, 0,  0, -a],

                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  -1, 2,-1, 0, 0, 0, 0, 0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0,-1, 2,-1, 0, 0, 0, 0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, -1, 2,-1,0, 0, 0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, -1, 2,-1,0, 0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, 0, -1, 2,-1,0, 0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, 0, 0, -1, 2,-1,0, 0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, 0, 0, 0, -1, 2,-1,0,  0, -a],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,  0,   0, 0, 0, 0, 0, 0, 0, -1, 2,-1, 0, -a]])
b_ub = np.zeros(36).T
A_eq = np.array([[1, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 1,   0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  0, 0],
                 [1, -1, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0, 1, -1,  0, 0]])
b_eq = np.array([[q0, qw, qf, 0, 0]]).T

import scipy.optimize as sp
# import pdb; pdb.set_trace()
result = sp.linprog(c, A_ub=A_ub, b_ub=b_ub, A_eq=A_eq, b_eq=b_eq, bounds=(None, None))

qs = result.x[:20]
# v_pad = np.insert(v, 0, 0, axis=0)
# v_pad = np.delete(v_pad, -1, axis=0)
# a = v - v_pad
dt1 = np.sqrt(result.x[20])
dt2 = np.sqrt(result.x[21])
print ("dt1=", dt1)
print ("dt2=", dt2)
t1 = np.arange(10)*dt1
t2 = t1[-1] + (dt1+dt2)/2. + np.arange(10)*dt2
print (t1)
print (t2)
t = np.concatenate((t1,t2), axis=0)
plt.figure()
plt.plot(t, qs, 'bo')
# plt.figure()
# plt.plot(t, result.x[10:], 'bo-')
plt.show()